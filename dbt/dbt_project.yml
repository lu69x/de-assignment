# dbt_project.yml
name: data_eng_assignment
version: "1.0"
config-version: 2

profile: data_eng_assignment

vars:
  surrogate_key_treat_nulls_as_empty_strings: true

model-paths: ["models"]
seed-paths: ["seeds"]
target-path: "target"
clean-targets: ["target", "dbt_packages"]

# ค่าเริ่มต้น
models:
  data_eng_assignment:              # <<< ต้องตรงกับ name ด้านบน
    +materialized: view             # ค่า default สำหรับทั้งโปรเจกต์ (จะถูก override ด้านล่าง)
    +schema: analytics              # ใส่ schema รวม (ปรับตามต้องการ)

    staging:
      +materialized: view           # ชั้น staging เป็น view
      # ถ้าต้องการ schema แยก:
      # +schema: staging

    intermediate:
      +materialized: view

    dim:
      +materialized: table

    fact:
      +materialized: table

    marts:
      +materialized: table          # ชั้น marts เป็น table (จะถูก COPY เป็น Parquet)
      # เขียนผลลัพธ์ของแต่ละ model ใน marts ออกเป็น Parquet บน S3/MinIO หลังรันเสร็จ
      +post-hook:
        - |
          {% set bucket = var('s3_bucket', env_var('S3_BUCKET', 'warehouse')) %}
          {% set prefix = var('s3_prefix', env_var('S3_PARQUET_PREFIX', 'assignment/parquet')) %}
          {% if prefix.endswith('/') %}
            {% set key_prefix = prefix[:-1] %}
          {% else %}
            {% set key_prefix = prefix %}
          {% endif %}
          {% if key_prefix %}
            copy (select * from {{ this }}) to 's3://{{ bucket }}/{{ key_prefix }}/{{ this.name }}.parquet' (format parquet, overwrite_or_ignore);
          {% else %}
            copy (select * from {{ this }}) to 's3://{{ bucket }}/{{ this.name }}.parquet' (format parquet, overwrite_or_ignore);
          {% endif %}
